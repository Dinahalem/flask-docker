name: build flask docker
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 

      - name: Login to DockerHub
        uses: docker/login-action@v1 # Info: https://github.com/docker/build-push-action/tree/releases/v1#tags
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: Dinahalem/flask-docker
          
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: dina2022/flaskdocker
        
            
  Run_container:
    name: run container
    needs: build
    runs-on: self-hosted  
    steps:         
    - name: Build container
      run: |       
          #docker stop flaskbuild
          #docker rm flaskbuild
          docker run -d -p 9999:9999 --name flaskbuild dina2022/flaskdocker
  
  kubernetes_cluster:
    name: Deploy to k8s
    runs-on: self-hosted 
    needs: [build, Run_container]
    steps:               
    - name: Deployment on K8s 
      run: |  
          minikube start
          kubectl apply -f flask-deployment.yaml
          kubectl apply -f node-port.yaml
 
 
 
  #deploy_to_EC2:
    #name: Deploy to EC2
    #runs-on: self-hosted
    #steps:
    #- name: success
      #env: 
          #SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          #SOURCE: /
          #REMOTE_HOST: ${{secrets.SSH_HOST}}
          #REMOTE_USER:  ${{secrets.SSH_USER}}
          #TARGET:  ${{secrets.TARGET_DIR}}
      #run: |
          #docker stop flaskbuild
          #docker rm flaskbuild
          #docker run -d -p 9999:9999 --name flaskbuild dina2022/flaskdocker
     
    #- name: fail
      #if: steps.master.output==1 
      #run: echo 'Fail deploy to EC2 server'
     
